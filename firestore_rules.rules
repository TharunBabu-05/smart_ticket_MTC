rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // TEMPORARY: Allow all authenticated users to read/write everything for testing
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // ENHANCED TICKETS (Primary collection)
    match /enhanced_tickets/{ticketId} {
      allow read, write: if request.auth != null;
    }
    
    // TICKETS (Secondary collection)  
    match /tickets/{ticketId} {
      allow read, write: if request.auth != null;
    }
    
    // SENSOR DATA COLLECTION (For fraud detection)
    match /sensor_data/{sessionId} {
      allow read, write: if request.auth != null;
      
      // Allow sub-collections for accelerometer, gyroscope, etc.
      match /{sensorType}/{readingId} {
        allow read, write: if request.auth != null;
      }
      
      // Allow nested sub-collections  
      match /{path=**} {
        allow read, write: if request.auth != null;
      }
    }
    
    // USER ANALYTICS (User behavior patterns)
    match /user_analytics/{userId} {
      allow read, write: if request.auth != null 
        && (request.auth.uid == userId 
        || exists(/databases/$(database)/documents/admins/$(request.auth.uid)));
    }
    
    // ADMIN COLLECTION
    match /admins/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // BUS ROUTES AND STOPS (Public read, admin write)
    match /bus_routes/{routeId} {
      allow read: if true;
      allow write: if request.auth != null 
        && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    match /bus_stops/{stopId} {
      allow read: if true;
      allow write: if request.auth != null 
        && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // USER PROFILES
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null 
        && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // TICKET VALIDATION LOGS (Conductor access)
    match /validation_logs/{logId} {
      allow read, write: if request.auth != null 
        && (exists(/databases/$(database)/documents/admins/$(request.auth.uid))
        || exists(/databases/$(database)/documents/conductors/$(request.auth.uid)));
    }
    
    // CONDUCTOR PROFILES
    match /conductors/{conductorId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null 
        && (request.auth.uid == conductorId 
        || exists(/databases/$(database)/documents/admins/$(request.auth.uid)));
    }
  }
}
